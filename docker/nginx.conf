daemon off;
user root;
pid  /var/run/nginx.pid;

worker_processes 4;
worker_rlimit_nofile 2048;

events {
  worker_connections 1024;
  multi_accept on;
}

error_log /dev/fd/2 info;

http {
  include /etc/nginx/mime.types;

  server_tokens off;
  chunked_transfer_encoding on;
  client_body_buffer_size 32k;
  client_max_body_size 64m;
  client_body_in_file_only off;
  large_client_header_buffers 1 8k;
  default_type application/octet-stream;
  disable_symlinks off;
  ignore_invalid_headers on;
  underscores_in_headers on;
  sendfile on;
  access_log off;
  tcp_nodelay on;
  tcp_nopush on;
  keepalive_disable msie6;
  keepalive_requests 256;
  keepalive_timeout 30;
  send_timeout 20s;
  reset_timedout_connection on;
  client_body_timeout 20;
  open_file_cache max=4096 inactive=20s;
  open_file_cache_valid 40s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  server {
    listen      80;
    server_name _;
    root        /var/www;
    index       index.html index.htm;
    autoindex   on;
    access_log  /dev/fd/1;

    # Setting directory names
    set $webface     "webface";
    set $errorspages "errorspages";

    # Setting custom error pages
    error_page 401 /error401.html;
    error_page 403 /error403.html;
    error_page 404 /error404.html;
    error_page 500 /error500.html;
    error_page 502 /error502.html;
    error_page 503 /error503.html;

    location ~ "^/error([\d]{3}\.html)$" {
      try_files /$webface/$errorspages/$1 $uri =404;
    }

    # Deny access for spiders/robots/tools/etc
    if ($http_user_agent ~* ^(wget|aria2|nod32view|perl|php|curl|google|yandex|yahoo|-|mirror|spider|bot|parser|grab)) {
      return 403;
    }

    # Deny direct access for hidden files/directories
    location ~ /\. {
      return 444;
    }

    # Redirect request to correct update.ver file, based on nod32 user-agent version
    location ~* "^(?<file_url>/update\.ver)$" {
      if ($http_user_agent ~* "BPC (?<version>[\d]{1,2})\.") {
        set $new_location "v$version$file_url";
      }
      if (-f $document_root/$new_location) {
        return 301 $scheme://$server_name/$new_location;
      }
    }

    # Enable checking username/password for updates files access
    location ~* ^.+\.nup$ {
      allow all;
      auth_basic "Enter login:password for getting access";
      auth_basic_user_file $document_root/.htpasswd;
    }

    # Redirect empty requests to webface index file
    location = / {
      try_files /$webface/index.html =404;
    }

    try_files $uri /$webface$uri /$webface/$errorspages$uri =404;
  }
}
